(add-to-list 'load-path
	     (expand-file-name (concat user-emacs-directory "lisp")))

(setq custom-file (expand-file-name "lisp/custom.el" user-emacs-directory))
(when (file-exists-p custom-file)
  (load-file custom-file))

;;set env
(setenv "PATH" (concat (getenv "PATH") ":/home/rat/.cargo/bin"))
(setq exec-path (append exec-path '("/home/rat/.cargo/bin")))

;; verify system type
(require 'init-const)

(require 'init-startup)
(require 'init-ui)
(require 'init-elpa)
(require 'init-pack)

;; rust-mode
;; (use-package rust-mode)

(use-package rustic
  :bind (:map rustic-mod-map
	      ("M-j" . lsp-ui-imenu)
	      ("M-?" . lsp-find-reference)
	      ("C-c C-c l" . flycheck-list-errors)
	      ("C-c C-c a" . lsp-execute-code-action)
	      ("C-c C-c r" . lsp-rename)
	      ("C-c C-c q" . lsp-workspace-restart)
	      ("C-c C-c Q" . lsp-workspace-shutdown)
	      ("C-c C-c s" . lsp-rust-analyzer-status)
	      )
  :config
  ;;
  ;; (setq lsp-eldoc-hook nil)
  ;;(setq lsp-enable-symbol-highlightning nil)
  ;; (setq lsp-signature-auto-activate nil)
  (setq rustic-format-on-save t)
  (add-hook 'rustic-mode-hook 'rk/rustic-mode-hook)
  )

;; bug rustic/issue/253
(defun rk/rustic-mode-hook ()
  (when buffer-file-name
    (setq-local buffer-save-without-query t)))


;; lsp mode config
(use-package lsp-mode
  :init (setq lsp-keymap-prefix "C-c l")
  :hook (;; replace xxx-mode with concrete major-mode
	 ;; (xxx-mode . lsp-deferred)
	(c-mode . lsp-deferred)
	(c++-mode . lsp-deferred)
;;	(rust-mode . lsp-deferred)
	(lsp-mode . lsp-enable-whick-key-integration))
  :custom
  (lsp-rust-analyzer-cargo-watch-command "clippy")
  (lsp-eldoc-render-all t)
  (lsp-idle-delay 0.6)
  (lsp-rust-analyzer-server-display-inlay-hints t)

  :commands (lsp lsp-deferred)
  )


;;(add-hook 'rust-mode-hook #'lsp-deferred)




;; use a debugger
;; (use-package dap-mode)
;; (use-package dap-c)
;; (use-package dap-c++)
;; (use-package dap-rust)

;; use which-key integration
(use-package which-key
  :config
  (which-key-mode))

;; completion tools
(use-package company
  :custom
  (company-idle-delay 0.5)
  ;; (company-begin-commands nil) ;; uncomment to disable popup
  :bind
  (:map company-mod-map
	("<tab>" . tab-indent-or-complete)
	("TAB" . tab-indent-or-complete))
  )


(use-package yasnippet
  :ensure
  :config
  (yas-reload-all)
  (add-hook 'prog-mode-hook 'yas-minor-mode)
  (add-hook 'text-mode-hook 'yas-minor-mode)
 )
